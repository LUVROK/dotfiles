# !/bin/sh

# variables
DIR="$(dirname "$0")"
USERJS_BASED="$DIR/data/user.js"

TARGET_LOGS_FILE="/tmp/logs_firefoxSwitcher.txt"

PROFILES=$(awk -F= '/^\[Profile/ {profile=$0} /Name=/ {print $2}' ~/.mozilla/firefox/profiles.ini)
COUNT_OF_PROFILES=$(awk -F= '/^\[Profile/ {count++} END {print count}' ~/.mozilla/firefox/profiles.ini)
X=$(xdotool getmouselocation | awk -F: '{print $2}' | awk '{print $1}')
Y=$(xdotool getmouselocation | awk -F: '{print $3}' | awk '{print $1}')
OFFSET_RE="\+([-0-9]+)\+([-0-9]+)" # regular expression for xoff yoff check

rofi_command="rofi -theme $DIR/data/firefox-profiles-menu.rasi"

# options="XMR\nLTC\nBTC\nETC\nZEC\nETH\nBCH\nXRPH\n1INCH"
chosen="$(echo -e "$PROFILES" | $rofi_command -dmenu -selected-row $COUNT_OF_PROFILES)"

## calculation active monitor width
monitor_index=0
while read name width height xoff yoff
do
    if [ "${X}" -ge "$xoff" \
      -a "${Y}" -ge "$yoff" \
      -a "${X}" -lt "$(($xoff+$width))" \
      -a "${Y}" -lt "$(($yoff+$height))" ]
    then
        monitor=$name
        widthM=$width
        break
    fi
    ((monitor_index++))
done < <(xrandr | grep -w connected |
    sed -r "s/^([^ ]*).*\b([-0-9]+)x([-0-9]+)$OFFSET_RE.*$/\1 \2 \3 \4 \5/" |
    sort -nk4,5)

echo "$widthM" >> "$TARGET_LOGS_FILE"

if [ -z "$widthM" ] || [ "$widthM" -gt 2560 ]; then
    DPI=1
else
    DPI=0.8
fi

##############
PROFILE_DIR=$(echo "$HOME/.mozilla/firefox/"*"$chosen")
# Проверяем, существует ли директория профиля
if [ ! -d "$PROFILE_DIR" ]; then
    exit 1
fi
##############

##############
USER_JS="$PROFILE_DIR/user.js"

# If user.js does not exist, create it from USERJS_BASED
if [ ! -f "$USER_JS" ]; then
    if [ -f "$USERJS_BASED" ]; then
        cp "$USERJS_BASED" "$USER_JS"
        chmod 644 "$USER_JS"
        echo "user_pref(\"layout.css.devPixelsPerPx\", \"$DPI\");" >> "$USER_JS"
    else
        echo "Base user.js not found! Creating a new one..."
        cat <<EOF > "$USER_JS"
user_pref("toolkit.legacyUserProfileCustomizations.stylesheets", true);
user_pref("sidebar.revamp", false);
user_pref("svg.context-properties.content.enabled", true);
user_pref("layout.css.has-selector.enabled", true);
user_pref("layout.css.devPixelsPerPx", "$DPI");
EOF
    chmod 644 "$USER_JS"
    fi
else
    chmod 644 "$USER_JS"
    # Update or add layout.css.devPixelsPerPx
    if grep -q 'layout.css.devPixelsPerPx' "$USER_JS"; then
        sed -i "s/user_pref(\"layout.css.devPixelsPerPx\".*/user_pref(\"layout.css.devPixelsPerPx\", \"$DPI\");/" "$USER_JS"
    else
        echo "user_pref(\"layout.css.devPixelsPerPx\", \"$DPI\");" >> "$USER_JS"
    fi
fi
##############

# ############## backup all user.js files
# # Find all profiles and their user.js files
# for PROFILE_DIR in "$HOME/.mozilla/firefox/"*; do
#     if [[ -d "$PROFILE_DIR" && -f "$PROFILE_DIR/user.js" ]]; then
#         PROFILE_NAME=$(basename "$PROFILE_DIR")
        
#         # Create a corresponding folder in the backup directory
#         mkdir -p "$BACKUP_DIR/$PROFILE_NAME"

#         # Copy user.js file to the backup directory
#         cp "$PROFILE_DIR/user.js" "$BACKUP_DIR/$PROFILE_NAME/user.js"
        
#         echo "Backed up: $PROFILE_NAME/user.js"
#     fi
# done
# ##############

# check if profile already running
if pgrep -f "firefox.*-P $chosen" > /dev/null; then
    notify-send "Firefox Profile Warning" "Profile '$chosen' is already running!"
else
    firefox --no-remote -P "$chosen" 2>/dev/null
fi
